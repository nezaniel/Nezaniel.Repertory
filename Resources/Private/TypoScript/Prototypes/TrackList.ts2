prototype(Rep:TrackList) < prototype(Content) {
	@override.aggregationCollections = ${q(site).find('[instanceof Nezaniel.Repertory:TrackAggregation]')}
	trackAggregations = TS:Collection {
		collection = ${q(site).find('[instanceof Nezaniel.Repertory:TrackAggregation]')}

		itemName = 'trackAggregation'
		itemRenderer = TS:Template {
			templatePath = 'resource://Nezaniel.Repertory/Private/Templates/NodeTypes/TrackAggregation/ListItem.html'

			title = ${q(trackAggregation).property('title')}
			tracks = TS:Collection {
				collection = ${q(trackAggregation).find('[instanceof Nezaniel.Repertory:Track]')}
				itemName = 'track'
				itemRenderer = TS:Template {
					templatePath = 'resource://Nezaniel.Repertory/Private/Templates/NodeTypes/Track/ListItem.html'

					track = ${track}
					title = ${q(track).property('title')}
					orchestration = ${q(track).property('orchestration')}
					singAlong = ${q(track).property('singAlong') != 'no'}
					difficulty = ${q(track).property('difficulty')}
					awesomeness = ${q(track).property('awesomeness')}
					key = ${q(track).property('key')}
					emotionType = ${q(track).property('emotionType')}
                    state = ${q(track).property('state')}
					annotations = ContentCollection {
						@override.contentCollectionNode = ${Neos.Node.nearestContentCollection(track, 'main')}
					}
				}
			}
		}
	}

	@cache {
		entryTags {
			track = ${'NodeType_Nezaniel.Repertory:Track'}
		}
	}
}

prototype(Rep:SingAlong) < prototype(Content) {
    tracks = TS:Collection {
        collection = ${q(site).find('[instanceof Nezaniel.Repertory:Track]').filter('[singAlong != no]')}
        itemName = 'track'
        itemRenderer = TS:Template {
            templatePath = 'resource://Nezaniel.Repertory/Private/Templates/NodeTypes/Track/SingAlongItem.html'

            track = ${track}
            title = ${q(track).property('shortTitle') ? q(track).property('shortTitle'): q(track).property('title')}
            identifier = ${track.identifier}
            verses = ContentCollection {
                @override.contentCollectionNode = ${q(track).children('verses').get(0)}
                @process.contentElementWrapping >
                @if.onlyIfCompletelySingAlong = ${q(track).property('singAlong') == 'completely'}
            }
            refrain = ${q(track).property('refrain')}

            @cache {
                entryTags {
                    track = ${'NodeType_Nezaniel.Repertory:Track'}
                }
            }
        }
    }

    @cache {
        entryTags {
            track = ${'NodeType_Nezaniel.Repertory:Track'}
        }
    }
}